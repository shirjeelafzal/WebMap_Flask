"""Adding foreign keys to trees_table

Revision ID: b01a8bcaaed7
Revises: 78cb91971010
Create Date: 2023-12-12 13:03:10.775200

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b01a8bcaaed7'
down_revision = '78cb91971010'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('spatial_ref_sys')
    with op.batch_alter_table('trees_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gardener_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('species_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'gardeners_table', ['gardener_id'], ['id'])
        batch_op.create_foreign_key(None, 'species_table', ['species_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('trees_table', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('species_id')
        batch_op.drop_column('gardener_id')

    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
