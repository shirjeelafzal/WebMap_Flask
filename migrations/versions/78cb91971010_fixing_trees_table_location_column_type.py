"""Fixing trees_table location column type

Revision ID: 78cb91971010
Revises: 
Create Date: 2023-12-12 12:47:36.286591

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2

# revision identifiers, used by Alembic.
revision = '78cb91971010'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('spatial_ref_sys')
    op.drop_table('user')
    with op.batch_alter_table('gardeners_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('surname', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(length=80), nullable=False))
        batch_op.drop_constraint('gardeners_table_username_key', type_='unique')
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.create_unique_constraint(None, ['surname'])
        batch_op.drop_column('username')

    with op.batch_alter_table('species_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('scientific_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('common_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('family', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('maximum_height', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('beginning_of_flowering', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('end_of_flowering', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('species_table_username_key', type_='unique')
        batch_op.create_unique_constraint(None, ['family'])
        batch_op.create_unique_constraint(None, ['scientific_name'])
        batch_op.create_unique_constraint(None, ['common_name'])
        batch_op.drop_column('username')

    with op.batch_alter_table('trees_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
        batch_op.add_column(sa.Column('planting_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('state_of_conservation', sa.String(length=80), nullable=False))
        batch_op.add_column(sa.Column('height', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('diameter', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('last_pruning', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('trees_table_username_key', type_='unique')
        # batch_op.create_index('idx_trees_table_location', ['location'], unique=False, postgresql_using='gist')
        batch_op.create_unique_constraint(None, ['state_of_conservation'])
        batch_op.drop_column('username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('trees_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index('idx_trees_table_location', postgresql_using='gist')
        batch_op.create_unique_constraint('trees_table_username_key', ['username'])
        batch_op.drop_column('last_pruning')
        batch_op.drop_column('diameter')
        batch_op.drop_column('height')
        batch_op.drop_column('state_of_conservation')
        batch_op.drop_column('planting_date')
        batch_op.drop_column('location')

    with op.batch_alter_table('species_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('species_table_username_key', ['username'])
        batch_op.drop_column('end_of_flowering')
        batch_op.drop_column('beginning_of_flowering')
        batch_op.drop_column('maximum_height')
        batch_op.drop_column('family')
        batch_op.drop_column('common_name')
        batch_op.drop_column('scientific_name')

    with op.batch_alter_table('gardeners_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('gardeners_table_username_key', ['username'])
        batch_op.drop_column('email')
        batch_op.drop_column('surname')
        batch_op.drop_column('name')

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
